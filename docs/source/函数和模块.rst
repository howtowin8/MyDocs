================
函数和模块
================

函数
~~~~

函数是一段可重复使用的代码块，用于完成特定的任务。在Python中，使用def关键字来定义函数。

例如：

.. code-block:: python3

   def square(x):
       return x ** 2

   print(square(5))

在上面的例子中，定义了一个名为square的函数，它接受一个参数x，并返回x的平方。然后调用square函数，并将5作为参数传递给它，最后打印函数的返回值。

模块
~~~~

模块是一个包含Python代码的文件，它用于组织代码和数据。在Python中，使用import关键字来导入模块。

例如：

.. code-block:: python3

   import math

   print(math.pi)

在上面的例子中，导入了Python标准库中的math模块，并打印了pi常量的值。

Python中有许多内置模块，例如os、sys、random等，它们提供了许多有用的功能。

自定义模块
~~~~~~~~~~

除了使用内置模块外，我们还可以创建自己的模块。要创建一个模块，只需编写Python代码并将其保存为.py文件。

例如，假设我们有一个名为my_module.py的文件，其中包含以下代码：

.. code-block:: python3

   def hello(name):
       print("Hello, " + name + "!")

然后我们可以在另一个Python文件中导入该模块并调用hello函数：

.. code-block:: python3

   import my_module

   my_module.hello("Alice")

在上面的例子中，我们导入了my_module模块，并调用了它的hello函数，该函数接受一个参数name，并打印“Hello, name!”的消息。

.. tip::
   
    注意事项：

   - 在Python中，函数可以返回任何类型的值，包括数字、字符串、列表、元组、字典、甚至是其他函数。
   - 在Python中，可以使用关键字参数和默认参数来定义函数。关键字参数允许你通过名称而不是位置来传递参数，而默认参数允许你为函数参数指定默认值。
   - 在Python中，可以使用lambda表达式来定义匿名函数。lambda表达式是一种简单的函数定义方式，它通常用于函数参数或简单的函数实现。
   - 在Python中，可以使用装饰器来修改函数的行为。装饰器是一种特殊的函数，它接受一个函数作为参数，并返回一个修改后的函数。